/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  BytesAndStrings,
  BytesAndStringsInterface,
} from "../../contracts/BytesAndStrings";

const _abi = [
  {
    inputs: [],
    name: "addElement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "b1",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "getElement",
    outputs: [
      {
        internalType: "bytes1",
        name: "",
        type: "bytes1",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "s1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600381526020017f6162630000000000000000000000000000000000000000000000000000000000815250600090816200004a919062000320565b506040518060400160405280600381526020017f6162630000000000000000000000000000000000000000000000000000000000815250600190816200009191906200046c565b503480156200009f57600080fd5b5062000553565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200012857607f821691505b6020821081036200013e576200013d620000e0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001a87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000169565b620001b4868362000169565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000201620001fb620001f584620001cc565b620001d6565b620001cc565b9050919050565b6000819050919050565b6200021d83620001e0565b620002356200022c8262000208565b84845462000176565b825550505050565b600090565b6200024c6200023d565b6200025981848462000212565b505050565b5b8181101562000281576200027560008262000242565b6001810190506200025f565b5050565b601f821115620002d0576200029a8162000144565b620002a58462000159565b81016020851015620002b5578190505b620002cd620002c48562000159565b8301826200025e565b50505b505050565b600082821c905092915050565b6000620002f560001984600802620002d5565b1980831691505092915050565b6000620003108383620002e2565b9150826002028217905092915050565b6200032b82620000a6565b67ffffffffffffffff811115620003475762000346620000b1565b5b6200035382546200010f565b6200036082828562000285565b600060209050601f83116001811462000398576000841562000383578287015190505b6200038f858262000302565b865550620003ff565b601f198416620003a88662000144565b60005b82811015620003d257848901518255600182019150602085019450602081019050620003ab565b86831015620003f25784890151620003ee601f891682620002e2565b8355505b6001600288020188555050505b505050505050565b60008190508160005260206000209050919050565b601f8211156200046757620004318162000407565b6200043c8462000159565b810160208510156200044c578190505b620004646200045b8562000159565b8301826200025e565b50505b505050565b6200047782620000a6565b67ffffffffffffffff811115620004935762000492620000b1565b5b6200049f82546200010f565b620004ac8282856200041c565b600060209050601f831160018114620004e45760008415620004cf578287015190505b620004db858262000302565b8655506200054b565b601f198416620004f48662000407565b60005b828110156200051e57848901518255600182019150602085019450602081019050620004f7565b868310156200053e57848901516200053a601f891682620002e2565b8355505b6001600288020188555050505b505050505050565b61062980620005636000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633a7d22bc1461005c5780633f2273b31461008c5780636cc014de14610096578063be1c766b146100b4578063ee495002146100d2575b600080fd5b61007660048036038101906100719190610385565b6100f0565b60405161008391906103ed565b60405180910390f35b61009461015a565b005b61009e610219565b6040516100ab91906104a1565b60405180910390f35b6100bc6102a7565b6040516100c991906104d2565b60405180910390f35b6100da6102bc565b6040516100e79190610542565b60405180910390f35b6000808281546100ff90610593565b811061010e5761010d6105c4565b5b81546001161561012d5790600052602060002090602091828204019190065b9054901a7f0100000000000000000000000000000000000000000000000000000000000000029050919050565b60008080548061016990610593565b80601f81036101885783600052602060002060ff1984168155603f9350505b506002820183556001810192505050600190038154600116156101ba5790600052602060002090602091828204019190065b7f640000000000000000000000000000000000000000000000000000000000000090919091601f036101000a81548160ff021916907f010000000000000000000000000000000000000000000000000000000000000084040217905550565b6001805461022690610593565b80601f016020809104026020016040519081016040528092919081815260200182805461025290610593565b801561029f5780601f106102745761010080835404028352916020019161029f565b820191906000526020600020905b81548152906001019060200180831161028257829003601f168201915b505050505081565b60008080546102b590610593565b9050905090565b600080546102c990610593565b80601f01602080910402602001604051908101604052809291908181526020018280546102f590610593565b80156103425780601f1061031757610100808354040283529160200191610342565b820191906000526020600020905b81548152906001019060200180831161032557829003601f168201915b505050505081565b600080fd5b6000819050919050565b6103628161034f565b811461036d57600080fd5b50565b60008135905061037f81610359565b92915050565b60006020828403121561039b5761039a61034a565b5b60006103a984828501610370565b91505092915050565b60007fff0000000000000000000000000000000000000000000000000000000000000082169050919050565b6103e7816103b2565b82525050565b600060208201905061040260008301846103de565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610442578082015181840152602081019050610427565b83811115610451576000848401525b50505050565b6000601f19601f8301169050919050565b600061047382610408565b61047d8185610413565b935061048d818560208601610424565b61049681610457565b840191505092915050565b600060208201905081810360008301526104bb8184610468565b905092915050565b6104cc8161034f565b82525050565b60006020820190506104e760008301846104c3565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610514826104ed565b61051e81856104f8565b935061052e818560208601610424565b61053781610457565b840191505092915050565b6000602082019050818103600083015261055c8184610509565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105ab57607f821691505b6020821081036105be576105bd610564565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea26469706673582212207c0c9a277b5869ed056e5363a928d342cbbcbd126cfa2886474c610b7ee3aada64736f6c634300080f0033";

type BytesAndStringsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BytesAndStringsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BytesAndStrings__factory extends ContractFactory {
  constructor(...args: BytesAndStringsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BytesAndStrings> {
    return super.deploy(overrides || {}) as Promise<BytesAndStrings>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BytesAndStrings {
    return super.attach(address) as BytesAndStrings;
  }
  override connect(signer: Signer): BytesAndStrings__factory {
    return super.connect(signer) as BytesAndStrings__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BytesAndStringsInterface {
    return new utils.Interface(_abi) as BytesAndStringsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BytesAndStrings {
    return new Contract(address, _abi, signerOrProvider) as BytesAndStrings;
  }
}
