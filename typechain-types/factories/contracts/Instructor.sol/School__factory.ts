/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  School,
  SchoolInterface,
} from "../../../contracts/Instructor.sol/School";

const _abi = [
  {
    inputs: [],
    name: "schoolInstructor",
    outputs: [
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806363dad1e614610030575b600080fd5b610038610050565b60405161004793929190610203565b60405180910390f35b600080600001549080600101805461006790610270565b80601f016020809104026020016040519081016040528092919081815260200182805461009390610270565b80156100e05780601f106100b5576101008083540402835291602001916100e0565b820191906000526020600020905b8154815290600101906020018083116100c357829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b6000819050919050565b61012381610110565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610163578082015181840152602081019050610148565b83811115610172576000848401525b50505050565b6000601f19601f8301169050919050565b600061019482610129565b61019e8185610134565b93506101ae818560208601610145565b6101b781610178565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101ed826101c2565b9050919050565b6101fd816101e2565b82525050565b6000606082019050610218600083018661011a565b818103602083015261022a8185610189565b905061023960408301846101f4565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061028857607f821691505b60208210810361029b5761029a610241565b5b5091905056fea2646970667358221220b7e3f0ab4352c6bbe4a30e0d9c6550d043441023f58869953bb2440e98aec36564736f6c634300080f0033";

type SchoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SchoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class School__factory extends ContractFactory {
  constructor(...args: SchoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<School> {
    return super.deploy(overrides || {}) as Promise<School>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): School {
    return super.attach(address) as School;
  }
  override connect(signer: Signer): School__factory {
    return super.connect(signer) as School__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SchoolInterface {
    return new utils.Interface(_abi) as SchoolInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): School {
    return new Contract(address, _abi, signerOrProvider) as School;
  }
}
