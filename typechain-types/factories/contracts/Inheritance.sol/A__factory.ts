/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { A, AInterface } from "../../../contracts/Inheritance.sol/A";

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "_x",
        type: "int256",
      },
    ],
    name: "setX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "x",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "y",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600360015534801561001557600080fd5b50610173806100256000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630c55699c14610046578063a0fc499414610064578063a56dfe4a14610080575b600080fd5b61004e61009e565b60405161005b9190610101565b60405180910390f35b61007e600480360381019061007991906100c9565b6100a4565b005b6100886100ae565b6040516100959190610101565b60405180910390f35b60005481565b8060008190555050565b60015481565b6000813590506100c381610126565b92915050565b6000602082840312156100db57600080fd5b60006100e9848285016100b4565b91505092915050565b6100fb8161011c565b82525050565b600060208201905061011660008301846100f2565b92915050565b6000819050919050565b61012f8161011c565b811461013a57600080fd5b5056fea2646970667358221220b2bd2db2db67ca3d740ced331e511c19e51804c3e60998ddb72b4612a474b30964736f6c63430008040033";

type AConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class A__factory extends ContractFactory {
  constructor(...args: AConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<A> {
    return super.deploy(overrides || {}) as Promise<A>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): A {
    return super.attach(address) as A;
  }
  override connect(signer: Signer): A__factory {
    return super.connect(signer) as A__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AInterface {
    return new utils.Interface(_abi) as AInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): A {
    return new Contract(address, _abi, signerOrProvider) as A;
  }
}
