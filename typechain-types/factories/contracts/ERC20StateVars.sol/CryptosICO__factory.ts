/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CryptosICO,
  CryptosICOInterface,
} from "../../../contracts/ERC20StateVars.sol/CryptosICO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_deposit",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Invest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDeposit",
        type: "address",
      },
    ],
    name: "changeDepositAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "founder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentState",
    outputs: [
      {
        internalType: "enum CryptosICO.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "halt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "icoState",
    outputs: [
      {
        internalType: "enum CryptosICO.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "invest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxInvestment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minInvestment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raisedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenTradeStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600781526020017f43727970746f7300000000000000000000000000000000000000000000000000815250600090816200004a91906200050e565b506040518060400160405280600481526020017f4352505400000000000000000000000000000000000000000000000000000000815250600190816200009191906200050e565b50600060025566038d7ea4c68000600955681043561a8829300000600a5542600c5562093a80600c54620000c6919062000624565b600d5562093a80600d54620000dc919062000624565b600e55674563918244f40000600f5567016345785d8a00006010553480156200010457600080fd5b50604051620020f4380380620020f483398181016040528101906200012a9190620006eb565b620f424060038190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060035460056000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601160006101000a81548160ff021916908360038111156200028857620002876200071d565b5b0217905550506200074c565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031657607f821691505b6020821081036200032c576200032b620002ce565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000357565b620003a2868362000357565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ef620003e9620003e384620003ba565b620003c4565b620003ba565b9050919050565b6000819050919050565b6200040b83620003ce565b620004236200041a82620003f6565b84845462000364565b825550505050565b600090565b6200043a6200042b565b6200044781848462000400565b505050565b5b818110156200046f576200046360008262000430565b6001810190506200044d565b5050565b601f821115620004be57620004888162000332565b620004938462000347565b81016020851015620004a3578190505b620004bb620004b28562000347565b8301826200044c565b50505b505050565b600082821c905092915050565b6000620004e360001984600802620004c3565b1980831691505092915050565b6000620004fe8383620004d0565b9150826002028217905092915050565b620005198262000294565b67ffffffffffffffff8111156200053557620005346200029f565b5b620005418254620002fd565b6200054e82828562000473565b600060209050601f83116001811462000586576000841562000571578287015190505b6200057d8582620004f0565b865550620005ed565b601f198416620005968662000332565b60005b82811015620005c05784890151825560018201915060208501945060208101905062000599565b86831015620005e05784890151620005dc601f891682620004d0565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200063182620003ba565b91506200063e83620003ba565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006765762000675620005f5565b5b828201905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006b38262000686565b9050919050565b620006c581620006a6565b8114620006d157600080fd5b50565b600081519050620006e581620006ba565b92915050565b60006020828403121562000704576200070362000681565b5b60006200071484828501620006d4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611998806200075c6000396000f3fe60806040526004361061019f5760003560e01c80636d58c88f116100ec578063c59ee1dc1161008a578063dd62ed3e11610064578063dd62ed3e146105c0578063e8b5e51f146105fd578063f851a4401461061b578063fb86a40414610646576101ae565b8063c59ee1dc1461053f578063cc9ba5831461056a578063d0e30db014610595576101ae565b806395d89b41116100c657806395d89b4114610481578063a9059cbb146104ac578063ab0bcc41146104e9578063c10b935814610514576101ae565b80636d58c88f146103f057806370a08231146104195780638ac2c68014610456576101ae565b806327e235e31161015957806344df8e701161013357806344df8e701461035857806344f38756146103835780634d853ee5146103ae5780635ed7ca5b146103d9576101ae565b806327e235e3146102c5578063313ce56714610302578063378aa7011461032d576101ae565b80622e1316146101b3578063046f7da2146101de57806306fdde03146101f5578063095ea7b31461022057806318160ddd1461025d57806323b872dd14610288576101ae565b366101ae576101ac610671565b005b600080fd5b3480156101bf57600080fd5b506101c86108cc565b6040516101d591906113d4565b60405180910390f35b3480156101ea57600080fd5b506101f36108d2565b005b34801561020157600080fd5b5061020a610959565b6040516102179190611488565b60405180910390f35b34801561022c57600080fd5b5061024760048036038101906102429190611539565b6109e7565b6040516102549190611594565b60405180910390f35b34801561026957600080fd5b50610272610b32565b60405161027f91906113d4565b60405180910390f35b34801561029457600080fd5b506102af60048036038101906102aa91906115af565b610b38565b6040516102bc9190611594565b60405180910390f35b3480156102d157600080fd5b506102ec60048036038101906102e79190611602565b610b5f565b6040516102f991906113d4565b60405180910390f35b34801561030e57600080fd5b50610317610b77565b60405161032491906113d4565b60405180910390f35b34801561033957600080fd5b50610342610b7d565b60405161034f91906116a6565b60405180910390f35b34801561036457600080fd5b5061036d610bff565b60405161037a9190611594565b60405180910390f35b34801561038f57600080fd5b50610398610ce0565b6040516103a591906116a6565b60405180910390f35b3480156103ba57600080fd5b506103c3610cf3565b6040516103d091906116d0565b60405180910390f35b3480156103e557600080fd5b506103ee610d19565b005b3480156103fc57600080fd5b5061041760048036038101906104129190611729565b610da0565b005b34801561042557600080fd5b50610440600480360381019061043b9190611602565b610e3e565b60405161044d91906113d4565b60405180910390f35b34801561046257600080fd5b5061046b610e87565b60405161047891906113d4565b60405180910390f35b34801561048d57600080fd5b50610496610e8d565b6040516104a39190611488565b60405180910390f35b3480156104b857600080fd5b506104d360048036038101906104ce9190611539565b610f1b565b6040516104e09190611594565b60405180910390f35b3480156104f557600080fd5b506104fe610f40565b60405161050b91906113d4565b60405180910390f35b34801561052057600080fd5b50610529610f46565b60405161053691906113d4565b60405180910390f35b34801561054b57600080fd5b50610554610f4c565b60405161056191906113d4565b60405180910390f35b34801561057657600080fd5b5061057f610f52565b60405161058c91906113d4565b60405180910390f35b3480156105a157600080fd5b506105aa610f58565b6040516105b79190611765565b60405180910390f35b3480156105cc57600080fd5b506105e760048036038101906105e29190611780565b610f7e565b6040516105f491906113d4565b60405180910390f35b610605610671565b6040516106129190611594565b60405180910390f35b34801561062757600080fd5b50610630611005565b60405161063d91906116d0565b60405180910390f35b34801561065257600080fd5b5061065b61102b565b60405161066891906113d4565b60405180910390f35b600061067b610b7d565b601160006101000a81548160ff0219169083600381111561069f5761069e61162f565b5b0217905550600160038111156106b8576106b761162f565b5b601160009054906101000a900460ff1660038111156106da576106d961162f565b5b146106e457600080fd5b60105434101580156106f85750600f543411155b61070157600080fd5b34600b600082825461071391906117ef565b92505081905550600a54600b54111561072b57600080fd5b60006009543461073b9190611874565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078c91906117ef565b925050819055508060056000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461080491906118a5565b92505081905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610873573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f4ae4bd7655e0d350876a23cd90c4227b13db560e34435c6a488150a9c844bf5f34836040516108bc9291906118d9565b60405180910390a2600191505090565b600f5481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461092c57600080fd5b6001601160006101000a81548160ff021916908360038111156109525761095161162f565b5b0217905550565b6000805461096690611931565b80601f016020809104026020016040519081016040528092919081815260200182805461099290611931565b80156109df5780601f106109b4576101008083540402835291602001916109df565b820191906000526020600020905b8154815290600101906020018083116109c257829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610a3557600080fd5b60008211610a4257600080fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610b2091906113d4565b60405180910390a36001905092915050565b60035481565b6000600e544211610b4857600080fd5b610b53848484611031565b50600190509392505050565b60056020528060005260406000206000915090505481565b60025481565b6000600380811115610b9257610b9161162f565b5b601160009054906101000a900460ff166003811115610bb457610bb361162f565b5b03610bc25760039050610bfc565b600d54421015610bd55760009050610bfc565b600c544210158015610be95750600d544211155b15610bf75760019050610bfc565b600290505b90565b6000610c09610b7d565b601160006101000a81548160ff02191690836003811115610c2d57610c2c61162f565b5b021790555060026003811115610c4657610c4561162f565b5b601160009054906101000a900460ff166003811115610c6857610c6761162f565b5b14610c7257600080fd5b600060056000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905090565b601160009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d7357600080fd5b6003601160006101000a81548160ff02191690836003811115610d9957610d9861162f565b5b0217905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610dfa57600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60105481565b60018054610e9a90611931565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec690611931565b8015610f135780601f10610ee857610100808354040283529160200191610f13565b820191906000526020600020905b815481529060010190602001808311610ef657829003601f168201915b505050505081565b6000600e544211610f2b57600080fd5b610f358383611252565b506001905092915050565b600c5481565b600d5481565b600b5481565b600e5481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b600081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156110bc57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561110857600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461115791906118a5565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111ad91906117ef565b9250508190555081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461124091906118a5565b92505081905550600190509392505050565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156112a057600080fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112ef91906117ef565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461134591906118a5565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516113a991906113d4565b60405180910390a36001905092915050565b6000819050919050565b6113ce816113bb565b82525050565b60006020820190506113e960008301846113c5565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561142957808201518184015260208101905061140e565b83811115611438576000848401525b50505050565b6000601f19601f8301169050919050565b600061145a826113ef565b61146481856113fa565b935061147481856020860161140b565b61147d8161143e565b840191505092915050565b600060208201905081810360008301526114a2818461144f565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114da826114af565b9050919050565b6114ea816114cf565b81146114f557600080fd5b50565b600081359050611507816114e1565b92915050565b611516816113bb565b811461152157600080fd5b50565b6000813590506115338161150d565b92915050565b600080604083850312156115505761154f6114aa565b5b600061155e858286016114f8565b925050602061156f85828601611524565b9150509250929050565b60008115159050919050565b61158e81611579565b82525050565b60006020820190506115a96000830184611585565b92915050565b6000806000606084860312156115c8576115c76114aa565b5b60006115d6868287016114f8565b93505060206115e7868287016114f8565b92505060406115f886828701611524565b9150509250925092565b600060208284031215611618576116176114aa565b5b6000611626848285016114f8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061166f5761166e61162f565b5b50565b60008190506116808261165e565b919050565b600061169082611672565b9050919050565b6116a081611685565b82525050565b60006020820190506116bb6000830184611697565b92915050565b6116ca816114cf565b82525050565b60006020820190506116e560008301846116c1565b92915050565b60006116f6826114af565b9050919050565b611706816116eb565b811461171157600080fd5b50565b600081359050611723816116fd565b92915050565b60006020828403121561173f5761173e6114aa565b5b600061174d84828501611714565b91505092915050565b61175f816116eb565b82525050565b600060208201905061177a6000830184611756565b92915050565b60008060408385031215611797576117966114aa565b5b60006117a5858286016114f8565b92505060206117b6858286016114f8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006117fa826113bb565b9150611805836113bb565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561183a576118396117c0565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061187f826113bb565b915061188a836113bb565b92508261189a57611899611845565b5b828204905092915050565b60006118b0826113bb565b91506118bb836113bb565b9250828210156118ce576118cd6117c0565b5b828203905092915050565b60006040820190506118ee60008301856113c5565b6118fb60208301846113c5565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061194957607f821691505b60208210810361195c5761195b611902565b5b5091905056fea264697066735822122094a431b81139a94b0bb2fe591568ead8b5f36d15aaf49fe875fe77eeaa68e3b964736f6c634300080f0033";

type CryptosICOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptosICOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptosICO__factory extends ContractFactory {
  constructor(...args: CryptosICOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deposit: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CryptosICO> {
    return super.deploy(_deposit, overrides || {}) as Promise<CryptosICO>;
  }
  override getDeployTransaction(
    _deposit: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_deposit, overrides || {});
  }
  override attach(address: string): CryptosICO {
    return super.attach(address) as CryptosICO;
  }
  override connect(signer: Signer): CryptosICO__factory {
    return super.connect(signer) as CryptosICO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptosICOInterface {
    return new utils.Interface(_abi) as CryptosICOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptosICO {
    return new Contract(address, _abi, signerOrProvider) as CryptosICO;
  }
}
