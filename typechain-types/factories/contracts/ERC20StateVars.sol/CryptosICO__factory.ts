/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CryptosICO,
  CryptosICOInterface,
} from "../../../contracts/ERC20StateVars.sol/CryptosICO";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_deposit",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Invest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "remaining",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "newDeposit",
        type: "address",
      },
    ],
    name: "changeDepositAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "founder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentState",
    outputs: [
      {
        internalType: "enum CryptosICO.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "halt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "icoState",
    outputs: [
      {
        internalType: "enum CryptosICO.State",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "invest",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxInvestment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minInvestment",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raisedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "resume",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleEnd",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "saleStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenTradeStart",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040518060400160405280600781526020017f43727970746f7300000000000000000000000000000000000000000000000000815250600090816200004a91906200050e565b506040518060400160405280600481526020017f4352505400000000000000000000000000000000000000000000000000000000815250600190816200009191906200050e565b50600060025566038d7ea4c68000600955681043561a8829300000600a5542600c5562093a80600c54620000c6919062000624565b600d5562093a80600d54620000dc919062000624565b600e55674563918244f40000600f5567016345785d8a00006010553480156200010457600080fd5b5060405162001f6e38038062001f6e83398181016040528101906200012a9190620006eb565b620f424060038190555033600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060035460056000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000601160006101000a81548160ff021916908360038111156200028857620002876200071d565b5b0217905550506200074c565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200031657607f821691505b6020821081036200032c576200032b620002ce565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003967fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000357565b620003a2868362000357565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ef620003e9620003e384620003ba565b620003c4565b620003ba565b9050919050565b6000819050919050565b6200040b83620003ce565b620004236200041a82620003f6565b84845462000364565b825550505050565b600090565b6200043a6200042b565b6200044781848462000400565b505050565b5b818110156200046f576200046360008262000430565b6001810190506200044d565b5050565b601f821115620004be57620004888162000332565b620004938462000347565b81016020851015620004a3578190505b620004bb620004b28562000347565b8301826200044c565b50505b505050565b600082821c905092915050565b6000620004e360001984600802620004c3565b1980831691505092915050565b6000620004fe8383620004d0565b9150826002028217905092915050565b620005198262000294565b67ffffffffffffffff8111156200053557620005346200029f565b5b620005418254620002fd565b6200054e82828562000473565b600060209050601f83116001811462000586576000841562000571578287015190505b6200057d8582620004f0565b865550620005ed565b601f198416620005968662000332565b60005b82811015620005c05784890151825560018201915060208501945060208101905062000599565b86831015620005e05784890151620005dc601f891682620004d0565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200063182620003ba565b91506200063e83620003ba565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115620006765762000675620005f5565b5b828201905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620006b38262000686565b9050919050565b620006c581620006a6565b8114620006d157600080fd5b50565b600081519050620006e581620006ba565b92915050565b60006020828403121562000704576200070362000681565b5b60006200071484828501620006d4565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b611812806200075c6000396000f3fe6080604052600436106101805760003560e01c806370a08231116100d1578063c59ee1dc1161008a578063dd62ed3e11610064578063dd62ed3e14610567578063e8b5e51f146105a4578063f851a440146105c2578063fb86a404146105ed57610180565b8063c59ee1dc146104e6578063cc9ba58314610511578063d0e30db01461053c57610180565b806370a08231146103c05780638ac2c680146103fd57806395d89b4114610428578063a9059cbb14610453578063ab0bcc4114610490578063c10b9358146104bb57610180565b806327e235e31161013e57806344f387561161011857806344f387561461032a5780634d853ee5146103555780635ed7ca5b146103805780636d58c88f1461039757610180565b806327e235e314610297578063313ce567146102d4578063378aa701146102ff57610180565b80622e131614610185578063046f7da2146101b057806306fdde03146101c7578063095ea7b3146101f257806318160ddd1461022f57806323b872dd1461025a575b600080fd5b34801561019157600080fd5b5061019a610618565b6040516101a7919061124e565b60405180910390f35b3480156101bc57600080fd5b506101c561061e565b005b3480156101d357600080fd5b506101dc6106a5565b6040516101e99190611302565b60405180910390f35b3480156101fe57600080fd5b50610219600480360381019061021491906113b3565b610733565b604051610226919061140e565b60405180910390f35b34801561023b57600080fd5b5061024461087e565b604051610251919061124e565b60405180910390f35b34801561026657600080fd5b50610281600480360381019061027c9190611429565b610884565b60405161028e919061140e565b60405180910390f35b3480156102a357600080fd5b506102be60048036038101906102b9919061147c565b610aa5565b6040516102cb919061124e565b60405180910390f35b3480156102e057600080fd5b506102e9610abd565b6040516102f6919061124e565b60405180910390f35b34801561030b57600080fd5b50610314610ac3565b6040516103219190611520565b60405180910390f35b34801561033657600080fd5b5061033f610b45565b60405161034c9190611520565b60405180910390f35b34801561036157600080fd5b5061036a610b58565b604051610377919061154a565b60405180910390f35b34801561038c57600080fd5b50610395610b7e565b005b3480156103a357600080fd5b506103be60048036038101906103b991906115a3565b610c05565b005b3480156103cc57600080fd5b506103e760048036038101906103e2919061147c565b610ca3565b6040516103f4919061124e565b60405180910390f35b34801561040957600080fd5b50610412610cec565b60405161041f919061124e565b60405180910390f35b34801561043457600080fd5b5061043d610cf2565b60405161044a9190611302565b60405180910390f35b34801561045f57600080fd5b5061047a600480360381019061047591906113b3565b610d80565b604051610487919061140e565b60405180910390f35b34801561049c57600080fd5b506104a5610ee9565b6040516104b2919061124e565b60405180910390f35b3480156104c757600080fd5b506104d0610eef565b6040516104dd919061124e565b60405180910390f35b3480156104f257600080fd5b506104fb610ef5565b604051610508919061124e565b60405180910390f35b34801561051d57600080fd5b50610526610efb565b604051610533919061124e565b60405180910390f35b34801561054857600080fd5b50610551610f01565b60405161055e91906115df565b60405180910390f35b34801561057357600080fd5b5061058e600480360381019061058991906115fa565b610f27565b60405161059b919061124e565b60405180910390f35b6105ac610fae565b6040516105b9919061140e565b60405180910390f35b3480156105ce57600080fd5b506105d7611209565b6040516105e4919061154a565b60405180910390f35b3480156105f957600080fd5b5061060261122f565b60405161060f919061124e565b60405180910390f35b600f5481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067857600080fd5b6001601160006101000a81548160ff0219169083600381111561069e5761069d6114a9565b5b0217905550565b600080546106b290611669565b80601f01602080910402602001604051908101604052809291908181526020018280546106de90611669565b801561072b5780601f106107005761010080835404028352916020019161072b565b820191906000526020600020905b81548152906001019060200180831161070e57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561078157600080fd5b6000821161078e57600080fd5b81600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161086c919061124e565b60405180910390a36001905092915050565b60035481565b600081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561090f57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561095b57600080fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109aa91906116c9565b9250508190555081600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a0091906116fd565b9250508190555081600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a9391906116c9565b92505081905550600190509392505050565b60056020528060005260406000206000915090505481565b60025481565b6000600380811115610ad857610ad76114a9565b5b601160009054906101000a900460ff166003811115610afa57610af96114a9565b5b03610b085760039050610b42565b600d54421015610b1b5760009050610b42565b600c544210158015610b2f5750600d544211155b15610b3d5760019050610b42565b600290505b90565b601160009054906101000a900460ff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bd857600080fd5b6003601160006101000a81548160ff02191690836003811115610bfe57610bfd6114a9565b5b0217905550565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c5f57600080fd5b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60105481565b60018054610cff90611669565b80601f0160208091040260200160405190810160405280929190818152602001828054610d2b90611669565b8015610d785780601f10610d4d57610100808354040283529160200191610d78565b820191906000526020600020905b815481529060010190602001808311610d5b57829003601f168201915b505050505081565b600081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610dce57600080fd5b81600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e1d91906116fd565b9250508190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610e7391906116c9565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ed7919061124e565b60405180910390a36001905092915050565b600c5481565b600d5481565b600b5481565b600e5481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000610fb8610ac3565b601160006101000a81548160ff02191690836003811115610fdc57610fdb6114a9565b5b021790555060016003811115610ff557610ff46114a9565b5b601160009054906101000a900460ff166003811115611017576110166114a9565b5b1461102157600080fd5b60105434101580156110355750600f543411155b61103e57600080fd5b34600b600082825461105091906116fd565b92505081905550600a54600b54111561106857600080fd5b6000600954346110789190611782565b905080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110c991906116fd565b925050819055508060056000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461114191906116c9565b92505081905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f193505050501580156111b0573d6000803e3d6000fd5b503373ffffffffffffffffffffffffffffffffffffffff167f4ae4bd7655e0d350876a23cd90c4227b13db560e34435c6a488150a9c844bf5f34836040516111f99291906117b3565b60405180910390a2600191505090565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b6000819050919050565b61124881611235565b82525050565b6000602082019050611263600083018461123f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112a3578082015181840152602081019050611288565b838111156112b2576000848401525b50505050565b6000601f19601f8301169050919050565b60006112d482611269565b6112de8185611274565b93506112ee818560208601611285565b6112f7816112b8565b840191505092915050565b6000602082019050818103600083015261131c81846112c9565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061135482611329565b9050919050565b61136481611349565b811461136f57600080fd5b50565b6000813590506113818161135b565b92915050565b61139081611235565b811461139b57600080fd5b50565b6000813590506113ad81611387565b92915050565b600080604083850312156113ca576113c9611324565b5b60006113d885828601611372565b92505060206113e98582860161139e565b9150509250929050565b60008115159050919050565b611408816113f3565b82525050565b600060208201905061142360008301846113ff565b92915050565b60008060006060848603121561144257611441611324565b5b600061145086828701611372565b935050602061146186828701611372565b92505060406114728682870161139e565b9150509250925092565b60006020828403121561149257611491611324565b5b60006114a084828501611372565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600481106114e9576114e86114a9565b5b50565b60008190506114fa826114d8565b919050565b600061150a826114ec565b9050919050565b61151a816114ff565b82525050565b60006020820190506115356000830184611511565b92915050565b61154481611349565b82525050565b600060208201905061155f600083018461153b565b92915050565b600061157082611329565b9050919050565b61158081611565565b811461158b57600080fd5b50565b60008135905061159d81611577565b92915050565b6000602082840312156115b9576115b8611324565b5b60006115c78482850161158e565b91505092915050565b6115d981611565565b82525050565b60006020820190506115f460008301846115d0565b92915050565b6000806040838503121561161157611610611324565b5b600061161f85828601611372565b925050602061163085828601611372565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061168157607f821691505b6020821081036116945761169361163a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006116d482611235565b91506116df83611235565b9250828210156116f2576116f161169a565b5b828203905092915050565b600061170882611235565b915061171383611235565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156117485761174761169a565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061178d82611235565b915061179883611235565b9250826117a8576117a7611753565b5b828204905092915050565b60006040820190506117c8600083018561123f565b6117d5602083018461123f565b939250505056fea2646970667358221220cd14babe7ed9bd9639381eedaa0c68fbf33ca852cfe3f99634ad26fda81d0ffb64736f6c634300080f0033";

type CryptosICOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CryptosICOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CryptosICO__factory extends ContractFactory {
  constructor(...args: CryptosICOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _deposit: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CryptosICO> {
    return super.deploy(_deposit, overrides || {}) as Promise<CryptosICO>;
  }
  override getDeployTransaction(
    _deposit: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_deposit, overrides || {});
  }
  override attach(address: string): CryptosICO {
    return super.attach(address) as CryptosICO;
  }
  override connect(signer: Signer): CryptosICO__factory {
    return super.connect(signer) as CryptosICO__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CryptosICOInterface {
    return new utils.Interface(_abi) as CryptosICOInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CryptosICO {
    return new Contract(address, _abi, signerOrProvider) as CryptosICO;
  }
}
