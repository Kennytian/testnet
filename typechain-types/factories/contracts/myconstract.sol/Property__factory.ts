/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Property,
  PropertyInterface,
} from "../../../contracts/myconstract.sol/Property";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "changeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506000808190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610319806100686000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80638da5cb5b1461005157806391b7f5ed1461006f57806398d5fdca1461008b578063a6f9dae1146100a9575b600080fd5b6100596100c5565b60405161006691906101dd565b60405180910390f35b61008960048036038101906100849190610233565b6100eb565b005b6100936100f5565b6040516100a0919061026f565b60405180910390f35b6100c360048036038101906100be91906102b6565b6100fe565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060008190555050565b60008054905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461015857600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101c78261019c565b9050919050565b6101d7816101bc565b82525050565b60006020820190506101f260008301846101ce565b92915050565b600080fd5b6000819050919050565b610210816101fd565b811461021b57600080fd5b50565b60008135905061022d81610207565b92915050565b600060208284031215610249576102486101f8565b5b60006102578482850161021e565b91505092915050565b610269816101fd565b82525050565b60006020820190506102846000830184610260565b92915050565b610293816101bc565b811461029e57600080fd5b50565b6000813590506102b08161028a565b92915050565b6000602082840312156102cc576102cb6101f8565b5b60006102da848285016102a1565b9150509291505056fea2646970667358221220b364f18f435f80df6cd2853e36ae2af10cce65c954926c1fb81fad40629b3a9064736f6c634300080f0033";

type PropertyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PropertyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Property__factory extends ContractFactory {
  constructor(...args: PropertyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Property> {
    return super.deploy(overrides || {}) as Promise<Property>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Property {
    return super.attach(address) as Property;
  }
  override connect(signer: Signer): Property__factory {
    return super.connect(signer) as Property__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PropertyInterface {
    return new utils.Interface(_abi) as PropertyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Property {
    return new Contract(address, _abi, signerOrProvider) as Property;
  }
}
