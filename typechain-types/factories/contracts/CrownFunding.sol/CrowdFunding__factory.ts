/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CrowdFunding,
  CrowdFundingInterface,
} from "../../../contracts/CrownFunding.sol/CrowdFunding";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_goal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_deadline",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contributors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deadline",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRefund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "goal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "noOfContributors",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "raisedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516108ce3803806108ce833981810160405281019061003291906100b0565b81600581905550804261004591906100ec565b600481905550606460038190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610192565b6000815190506100aa8161017b565b92915050565b600080604083850312156100c357600080fd5b60006100d18582860161009b565b92505060206100e28582860161009b565b9150509250929050565b60006100f782610142565b915061010283610142565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156101375761013661014c565b5b828201905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b61018481610142565b811461018f57600080fd5b50565b61072d806101a16000396000f3fe6080604052600436106100955760003560e01c8063937e09b111610059578063937e09b114610192578063b2d5ae44146101bd578063c59ee1dc146101d4578063d7bb99ba146101ff578063f851a44014610209576100a4565b806312065fe0146100a95780631f6d4942146100d457806329dcb0cf14610111578063401938831461013c5780634e260f6f14610167576100a4565b366100a4576100a2610234565b005b600080fd5b3480156100b557600080fd5b506100be61038d565b6040516100cb9190610558565b60405180910390f35b3480156100e057600080fd5b506100fb60048036038101906100f69190610470565b610395565b6040516101089190610558565b60405180910390f35b34801561011d57600080fd5b506101266103ad565b6040516101339190610558565b60405180910390f35b34801561014857600080fd5b506101516103b3565b60405161015e9190610558565b60405180910390f35b34801561017357600080fd5b5061017c6103b9565b6040516101899190610558565b60405180910390f35b34801561019e57600080fd5b506101a76103bf565b6040516101b49190610558565b60405180910390f35b3480156101c957600080fd5b506101d26103c5565b005b3480156101e057600080fd5b506101e961042f565b6040516101f69190610558565b60405180910390f35b610207610234565b005b34801561021557600080fd5b5061021e610435565b60405161022b91906104fd565b60405180910390f35b6004544210610278576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026f90610538565b60405180910390fd5b6003543410156102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610518565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141561031d576002600081548092919061031790610616565b91905055505b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036b9190610584565b9250508190555034600660008282546103849190610584565b92505081905550565b600047905090565b60006020528060005260406000206000915090505481565b60045481565b60055481565b60025481565b60035481565b600454421180156103d95750600554600654105b6103e257600080fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161042d57600080fd5b565b60065481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008135905061046a816106e0565b92915050565b60006020828403121561048257600080fd5b60006104908482850161045b565b91505092915050565b6104a2816105da565b82525050565b60006104b5601d83610573565b91506104c08261068e565b602082019050919050565b60006104d8601483610573565b91506104e3826106b7565b602082019050919050565b6104f78161060c565b82525050565b60006020820190506105126000830184610499565b92915050565b60006020820190508181036000830152610531816104a8565b9050919050565b60006020820190508181036000830152610551816104cb565b9050919050565b600060208201905061056d60008301846104ee565b92915050565b600082825260208201905092915050565b600061058f8261060c565b915061059a8361060c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156105cf576105ce61065f565b5b828201905092915050565b60006105e5826105ec565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006106218261060c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156106545761065361065f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4d696e696d756d20436f6e747269627574696f6e206e6f74206d657421000000600082015250565b7f446561646c696e65206861732070617373656421000000000000000000000000600082015250565b6106e9816105da565b81146106f457600080fd5b5056fea2646970667358221220d9790aa29d1a3354e0949fa0eee98592e98c31065c8d27a6ce95cb68b92fdeb064736f6c63430008040033";

type CrowdFundingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CrowdFundingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CrowdFunding__factory extends ContractFactory {
  constructor(...args: CrowdFundingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _goal: PromiseOrValue<BigNumberish>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CrowdFunding> {
    return super.deploy(
      _goal,
      _deadline,
      overrides || {}
    ) as Promise<CrowdFunding>;
  }
  override getDeployTransaction(
    _goal: PromiseOrValue<BigNumberish>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_goal, _deadline, overrides || {});
  }
  override attach(address: string): CrowdFunding {
    return super.attach(address) as CrowdFunding;
  }
  override connect(signer: Signer): CrowdFunding__factory {
    return super.connect(signer) as CrowdFunding__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdFundingInterface {
    return new utils.Interface(_abi) as CrowdFundingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdFunding {
    return new Contract(address, _abi, signerOrProvider) as CrowdFunding;
  }
}
