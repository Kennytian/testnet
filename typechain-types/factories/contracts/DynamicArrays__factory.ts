/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DynamicArrays,
  DynamicArraysInterface,
} from "../../contracts/DynamicArrays";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "item",
        type: "uint256",
      },
    ],
    name: "addElement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "f",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getElement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "numbers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "popElement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610513806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806326121ff0146100675780633a7d22bc146100715780639a6fcbdd146100a1578063be1c766b146100ab578063d39fa233146100c9578063f5d9612d146100f9575b600080fd5b61006f610115565b005b61008b6004803603810190610086919061037c565b6101e3565b60405161009891906103b8565b60405180910390f35b6100a9610251565b005b6100b361027b565b6040516100c091906103b8565b60405180910390f35b6100e360048036038101906100de919061037c565b610287565b6040516100f091906103b8565b60405180910390f35b610113600480360381019061010e919061037c565b6102ab565b005b6000600367ffffffffffffffff811115610132576101316103d3565b5b6040519080825280602002602001820160405280156101605781602001602082028036833780820191505090505b509050600a8160008151811061017957610178610402565b5b60200260200101818152505060148160018151811061019b5761019a610402565b5b602002602001018181525050601e816002815181106101bd576101bc610402565b5b60200260200101818152505080600090805190602001906101df9291906102d7565b5050565b60008080549050821061022b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102229061048e565b60405180910390fd5b6000828154811061023f5761023e610402565b5b90600052602060002001549050919050565b6000805480610263576102626104ae565b5b60019003818190600052602060002001600090559055565b60008080549050905090565b6000818154811061029757600080fd5b906000526020600020016000915090505481565b600081908060018154018082558091505060019003906000526020600020016000909190919091505550565b828054828255906000526020600020908101928215610313579160200282015b828111156103125782518255916020019190600101906102f7565b5b5090506103209190610324565b5090565b5b8082111561033d576000816000905550600101610325565b5090565b600080fd5b6000819050919050565b61035981610346565b811461036457600080fd5b50565b60008135905061037681610350565b92915050565b60006020828403121561039257610391610341565b5b60006103a084828501610367565b91505092915050565b6103b281610346565b82525050565b60006020820190506103cd60008301846103a9565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f696e646578203e3d206e756d626572732e6c656e677468000000000000000000600082015250565b6000610478601783610431565b915061048382610442565b602082019050919050565b600060208201905081810360008301526104a78161046b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea26469706673582212207408beea605d2bccebb278d927d37edb6787d99485af25c49d26e919d31f810664736f6c634300080f0033";

type DynamicArraysConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DynamicArraysConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DynamicArrays__factory extends ContractFactory {
  constructor(...args: DynamicArraysConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DynamicArrays> {
    return super.deploy(overrides || {}) as Promise<DynamicArrays>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DynamicArrays {
    return super.attach(address) as DynamicArrays;
  }
  override connect(signer: Signer): DynamicArrays__factory {
    return super.connect(signer) as DynamicArrays__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DynamicArraysInterface {
    return new utils.Interface(_abi) as DynamicArraysInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DynamicArrays {
    return new Contract(address, _abi, signerOrProvider) as DynamicArrays;
  }
}
