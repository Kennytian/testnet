/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  StateVariables,
  StateVariablesInterface,
} from "../../contracts/StateVariables";

const _abi = [
  {
    inputs: [],
    name: "f1",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "location",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052606460005534801561001557600080fd5b506103a2806100256000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063516f279e14610046578063a035b1fe14610064578063c27fc30514610082575b600080fd5b61004e6100a0565b60405161005b91906101d0565b60405180910390f35b61006c6100d9565b604051610079919061020b565b60405180910390f35b61008a6100df565b604051610097919061020b565b60405180910390f35b6040518060400160405280600681526020017f4c6f6e646f6e000000000000000000000000000000000000000000000000000081525081565b60005481565b600080600590506002816100f39190610255565b905060006040518060400160405280600381526020017f61626300000000000000000000000000000000000000000000000000000000008152509050819250505090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610171578082015181840152602081019050610156565b83811115610180576000848401525b50505050565b6000601f19601f8301169050919050565b60006101a282610137565b6101ac8185610142565b93506101bc818560208601610153565b6101c581610186565b840191505092915050565b600060208201905081810360008301526101ea8184610197565b905092915050565b6000819050919050565b610205816101f2565b82525050565b600060208201905061022060008301846101fc565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610260826101f2565b915061026b836101f2565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156102aa576102a9610226565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156102e7576102e6610226565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561032457610323610226565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561036157610360610226565b5b82820290509291505056fea26469706673582212209b6e217a8c8f2b20a22723e418721270c787fde8b7905519096bc1167d9e5dd464736f6c634300080f0033";

type StateVariablesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StateVariablesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StateVariables__factory extends ContractFactory {
  constructor(...args: StateVariablesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<StateVariables> {
    return super.deploy(overrides || {}) as Promise<StateVariables>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): StateVariables {
    return super.attach(address) as StateVariables;
  }
  override connect(signer: Signer): StateVariables__factory {
    return super.connect(signer) as StateVariables__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StateVariablesInterface {
    return new utils.Interface(_abi) as StateVariablesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StateVariables {
    return new Contract(address, _abi, signerOrProvider) as StateVariables;
  }
}
