/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Deposit, DepositInterface } from "../Deposit";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sendEther",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferEther",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104de806100606000396000f3fe6080604052600436106100435760003560e01c806305b1137b1461004c5780630e29df221461008957806312065fe0146100935780638da5cb5b146100be5761004a565b3661004a57005b005b34801561005857600080fd5b50610073600480360381019061006e919061024b565b6100e9565b60405161008091906102f2565b60405180910390f35b6100916101e2565b005b34801561009f57600080fd5b506100a86101f5565b6040516100b5919061032d565b60405180910390f35b3480156100ca57600080fd5b506100d36101fd565b6040516100e091906102d7565b60405180910390f35b60003373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610179576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101709061030d565b60405180910390fd5b6101816101f5565b82116101d7578273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156101cd573d6000803e3d6000fd5b50600190506101dc565b600090505b92915050565b600080806101ef906103b3565b91505050565b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000813590506102308161047a565b92915050565b60008135905061024581610491565b92915050565b6000806040838503121561025e57600080fd5b600061026c85828601610221565b925050602061027d85828601610236565b9150509250929050565b61029081610359565b82525050565b61029f8161037d565b82525050565b60006102b2602783610348565b91506102bd8261042b565b604082019050919050565b6102d1816103a9565b82525050565b60006020820190506102ec6000830184610287565b92915050565b60006020820190506103076000830184610296565b92915050565b60006020820190508181036000830152610326816102a5565b9050919050565b600060208201905061034260008301846102c8565b92915050565b600082825260208201905092915050565b600061036482610389565b9050919050565b600061037682610389565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006103be826103a9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156103f1576103f06103fc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f5472616e73666572206661696c65642c20796f7520617265206e6f742074686560008201527f206f776e65722100000000000000000000000000000000000000000000000000602082015250565b6104838161036b565b811461048e57600080fd5b50565b61049a816103a9565b81146104a557600080fd5b5056fea2646970667358221220f0f765bca3d16bf890012942cbfcdbfb1ecfe521f76441fbccfa886dde29077864736f6c63430008040033";

export class Deposit__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Deposit> {
    return super.deploy(overrides || {}) as Promise<Deposit>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Deposit {
    return super.attach(address) as Deposit;
  }
  connect(signer: Signer): Deposit__factory {
    return super.connect(signer) as Deposit__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DepositInterface {
    return new utils.Interface(_abi) as DepositInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Deposit {
    return new Contract(address, _abi, signerOrProvider) as Deposit;
  }
}
